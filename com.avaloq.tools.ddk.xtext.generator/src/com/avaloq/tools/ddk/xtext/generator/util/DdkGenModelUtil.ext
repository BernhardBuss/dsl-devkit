import org::eclipse::emf::ecore;
import org::eclipse::emf::codegen::ecore::genmodel;

extension org::eclipse::xtext::generator::Naming;

cached EObject eContainer(EObject this, xpand2::Type type) :
  this == null || type.isInstance(this) ? this : eContainer(this.eContainer(), type)
;

cached String qualifiedPackageInterfaceName(EPackage this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.qualifiedPackageInterfaceName(org.eclipse.emf.ecore.EPackage)
;

cached String packageInterfaceName(EPackage this) :
    qualifiedPackageInterfaceName().toSimpleName()
;

cached String editPluginPackageName(EPackage this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.editPluginPackageName(org.eclipse.emf.ecore.EPackage)
;

cached String qualifiedSwitchClassName(EPackage this) :
  let genPackage = genPackage() :
    genPackage != null && genPackage.literalsInterface ?
      genPackage.utilitiesPackageName + "." + genPackage.switchClassName :
      qualifiedPackageInterfaceName().toJavaPackage() + '.util.' + name.toFirstUpper() + 'Switch' // heuristic
;

cached String literalIdentifier(EStructuralFeature this) :
    let eClass     = EContainingClass :
    let ePackage   = eClass.EPackage :
  let genPackage = ePackage.genPackage() :
    genPackage != null && genPackage.literalsInterface ?
      eClass.literalIdentifier() + "__" + name.format().toUpperCase() :
      ePackage.qualifiedPackageInterfaceName() + ".eINSTANCE.get" + eClass.name + "_" + name.toFirstUpper() + "()"
;

cached String literalIdentifier(EClass this) :
  let genPackage = EPackage.genPackage() :
    genPackage != null && genPackage.literalsInterface ?
      genPackage.qualifiedPackageInterfaceName + ".Literals." + name.format().toUpperCase() :
      EPackage.qualifiedPackageInterfaceName() + ".eINSTANCE.get" + name + "()"
;

// defined to simplify debugging generator problems
cached String literalIdentifier(ENamedElement this) :
    "DOES_NOT_EXIST"
;

// defined to simplify debugging generator problems
cached String literalIdentifier(Void this) :
    "DOES_NOT_EXIST"
;

// e.g. EcorePackage.ENAMED_ELEMENT
cached String classifierIdLiteral(EClass this) :
  EPackage.qualifiedPackageInterfaceName() + "." + name.format().toUpperCase()
;

cached String instanceClassName(Void this) :
  ""
;

cached String instanceClassName(EClassifier this) :
  name
;

cached String instanceClassName(EDataType this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.getInstanceClassName(org.eclipse.emf.ecore.EDataType)
;

cached String instanceClassName(EClass this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.getInstanceClassName(org.eclipse.emf.ecore.EClass)
;

cached String instanceClassSimpleName(EClassifier this) :
  name
;

cached String instanceClassSimpleName(EDataType this) :
  instanceClassName != null ? instanceClass.simpleName : (genDataType() != null ? genDataType().name : name)
;

cached String instanceClassSimpleName(EClass this) :
  instanceClassName != null ? instanceClass.simpleName : (genClass() != null ? genClass().interfaceName : name)
;

cached GenPackage genPackage(EPackage this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.findGenPackage(org.eclipse.emf.ecore.EPackage)
;

cached GenModel genModel(EModelElement this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.findGenModel(org.eclipse.emf.ecore.EModelElement)
;

cached GenClass genClass(EClass this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.findGenClass(org.eclipse.emf.ecore.EClass)
;

cached GenDataType genDataType(EDataType this) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.findGenDataType(org.eclipse.emf.ecore.EDataType)
;

cached String format(String name) :
  JAVA com.avaloq.tools.ddk.xtext.generator.util.DdkGenModelUtil.format(java.lang.String)
;
